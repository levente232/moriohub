name: Publish MorioHub Content

on:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Node.js 20 (LTS/iron)

      # Step 3: Create default package.json
      - name: Create default package.json
        run: |
          npm init -y

      # Step 4: Install dependencies
      - name: Install Dependencies
        run: |
          npm install yaml glob

      # Step 5: Run prebuild script and pass the version/tag name as environment variable
      - name: Run Prebuild Script
        run: |
          node ./scripts/prebuild.mjs
        env:
          VERSION: ${{ github.ref_name }} # Pass the version as an environment variable

      # Step 6: Check if the JSON file exists
      - name: Check if the JSON file exists
        run: |
          ls -l ./moriohub-${{ github.ref_name }}.json

      # Step 7: Create Release (release for any tag)
      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') # Release for all tags
        uses: softprops/action-gh-release@v2
        with:
          files: ./moriohub-${{ github.ref_name }}.json # Upload JSON as release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provide GitHub token to authenticate

      # Step 8: Upload JSON as Release Asset with simpler name (remove tag from filename)
      - name: Upload JSON as Release Asset with simplified filename
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') # Release for all tags
        run: |
          mv ./moriohub-${{ github.ref_name }}.json ./moriohub.json
          gh release upload ${{ github.ref_name }} ./moriohub.json --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provide GitHub token to authenticate

